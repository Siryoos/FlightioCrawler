# Dockerfile for Background Worker Service
FROM python:3.11-slim AS base

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1

# ---

# Build stage
FROM base AS builder

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    git \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Install worker-specific dependencies with caching and staged installation
COPY requirements-worker.txt .
RUN --mount=type=cache,target=/root/.cache/pip \
    pip install --upgrade pip setuptools wheel \
    && pip install --user --timeout=1000 --retries=5 \
        celery>=5.3.0 redis>=4.3.4 psycopg2-binary>=2.9.3 \
    && pip install --user --timeout=1000 --retries=5 \
        sqlalchemy>=2.0.0 aiohttp>=3.8.0 requests>=2.28.0 \
    && pip install --user --timeout=1000 --retries=5 \
        beautifulsoup4>=4.12.0 lxml>=4.9.0 \
    && pip install --user --timeout=1000 --retries=5 \
        numpy>=1.22.3,<1.25.0 pandas>=1.4.2 \
    && pip install --user --timeout=1000 --retries=5 \
        scikit-learn>=1.0.2 \
    && pip install --user --timeout=1000 --retries=5 \
        hazm>=0.7.0 persian-tools>=0.0.8 jdatetime>=3.7.0 \
    && pip install --user --timeout=1000 --retries=5 \
        googletrans>=4.0.2 langdetect==1.0.9 \
    && pip install --user --timeout=1000 --retries=5 \
        prometheus-client>=0.14.1 python-json-logger>=2.0.2 psutil>=5.9.0 \
    && pip install --user --timeout=1000 --retries=5 \
        aiofiles>=23.2.1 joblib==1.3.2 orjson>=3.8.0 ujson>=5.7.0 \
    && pip install --user --timeout=1000 --retries=5 \
        aiocache>=0.12.0 diskcache>=5.6.0 python-dotenv>=0.19.0 pyyaml>=6.0 urllib3>=1.26.0,<2.0.0

# ---

# Runtime stage
FROM python:3.11-slim AS runtime

# Install minimal runtime dependencies for workers
RUN apt-get update && apt-get install -y --no-install-recommends \
    postgresql-client \
    curl \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create worker user
RUN groupadd -r worker && useradd -r -g worker worker

ENV PYTHONPATH=/app \
    PATH="/home/worker/.local/bin:$PATH" \
    C_FORCE_ROOT=1

WORKDIR /app

# Copy packages from builder
COPY --from=builder /root/.local /home/worker/.local

# Copy worker-specific code only
COPY --chown=worker:worker utils/ ./utils/
COPY --chown=worker:worker config/ ./config/
COPY --chown=worker:worker data/ ./data/
COPY --chown=worker:worker tasks.py ./
COPY --chown=worker:worker data_manager.py ./
COPY --chown=worker:worker ml_predictor.py ./
COPY --chown=worker:worker price_monitor.py ./
COPY --chown=worker:worker intelligent_search.py ./
COPY --chown=worker:worker multilingual_processor.py ./
COPY --chown=worker:worker persian_text.py ./

# Create directories
RUN mkdir -p logs data/storage data/transformers \
    && chown -R worker:worker /app

USER worker

EXPOSE 5555

HEALTHCHECK --interval=60s --timeout=30s --start-period=60s --retries=2 \
    CMD python -c "import redis; r=redis.Redis(host='redis'); r.ping()" || exit 1

# Default command - can be overridden for specific worker types
CMD ["celery", "worker", "-A", "tasks", "--loglevel=info", "--concurrency=2"] 