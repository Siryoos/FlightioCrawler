# Production SSL Configuration for FlightIO Crawler
# This configuration should be used with real certificates from a trusted CA

# SSL Certificate Configuration
# Update these paths to point to your actual certificates
ssl_certificate /etc/nginx/ssl/flightio.crt;
ssl_certificate_key /etc/nginx/ssl/flightio.key;

# Intermediate certificate (if provided by CA)
# ssl_trusted_certificate /etc/nginx/ssl/flightio-chain.crt;

# SSL Protocol Configuration
ssl_protocols TLSv1.2 TLSv1.3;
ssl_prefer_server_ciphers off;

# Modern cipher suite (recommended for production)
ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;

# SSL Session Configuration
ssl_session_timeout 1d;
ssl_session_cache shared:SSL:50m;
ssl_session_tickets off;

# DH Parameters for Perfect Forward Secrecy
ssl_dhparam /etc/nginx/ssl/dhparam.pem;

# OCSP Stapling
ssl_stapling on;
ssl_stapling_verify on;
ssl_trusted_certificate /etc/nginx/ssl/flightio-chain.crt;

# DNS resolvers for OCSP
resolver 8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout 5s;

# Security Headers
add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
add_header X-Frame-Options "DENY" always;
add_header X-Content-Type-Options "nosniff" always;
add_header X-XSS-Protection "1; mode=block" always;
add_header Referrer-Policy "strict-origin-when-cross-origin" always;

# Content Security Policy for production
add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https: wss:; frame-ancestors 'none';" always;

# Additional security headers
add_header X-Permitted-Cross-Domain-Policies "none" always;
add_header X-Robots-Tag "noindex, nofollow, nosnippet, noarchive" always;

# Instructions for certificate setup:
# 1. Obtain SSL certificates from a trusted Certificate Authority (CA)
# 2. Update the ssl_certificate and ssl_certificate_key paths above
# 3. If provided, add the intermediate certificate chain
# 4. Generate DH parameters: openssl dhparam -out /etc/nginx/ssl/dhparam.pem 2048
# 5. Test the configuration: nginx -t
# 6. Reload nginx: systemctl reload nginx
#
# Recommended CAs:
# - Let's Encrypt (free, automated)
# - DigiCert
# - Cloudflare
# - AWS Certificate Manager (for AWS deployments)
#
# For Let's Encrypt:
# certbot --nginx -d yourdomain.com -d www.yourdomain.com 