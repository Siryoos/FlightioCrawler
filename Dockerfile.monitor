# Lightweight Dockerfile for Monitoring Service
FROM python:3.11-slim as base

ENV PYTHONUNBUFFERED=1 \
    PYTHONDONTWRITEBYTECODE=1 \
    PIP_NO_CACHE_DIR=1

# ---

# Build stage
FROM base as builder

RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

WORKDIR /app

# Install monitoring-specific dependencies
COPY requirements.txt .
RUN grep -E "(psutil|prometheus|grafana|psycopg2|redis)" requirements.txt > requirements-monitor.txt \
    && echo "fastapi>=0.115.0" >> requirements-monitor.txt \
    && echo "uvicorn[standard]>=0.24.0" >> requirements-monitor.txt \
    && echo "aiohttp>=3.8.0" >> requirements-monitor.txt \
    && pip install --user -r requirements-monitor.txt

# ---

# Runtime stage
FROM python:3.11-slim as runtime

# Install minimal runtime dependencies for monitoring
RUN apt-get update && apt-get install -y --no-install-recommends \
    postgresql-client \
    curl \
    procps \
    && rm -rf /var/lib/apt/lists/* \
    && apt-get clean

# Create monitor user
RUN groupadd -r monitor && useradd -r -g monitor monitor

ENV PYTHONPATH=/app \
    PATH="/home/monitor/.local/bin:$PATH"

WORKDIR /app

# Copy packages from builder
COPY --from=builder /root/.local /home/monitor/.local

# Copy monitoring-specific code only
COPY --chown=monitor:monitor monitoring/ ./monitoring/
COPY --chown=monitor:monitor utils/ ./utils/
COPY --chown=monitor:monitor config/ ./config/
COPY --chown=monitor:monitor enhanced_monitoring.py ./
COPY --chown=monitor:monitor production_monitoring.py ./
COPY --chown=monitor:monitor flight_monitor.py ./
COPY --chown=monitor:monitor price_monitor.py ./
COPY --chown=monitor:monitor data_manager.py ./

# Create directories
RUN mkdir -p logs data/storage \
    && chown -R monitor:monitor /app

USER monitor

EXPOSE 9090

HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
    CMD python -c "import psutil; exit(0 if psutil.cpu_percent() < 95 else 1)" || exit 1

CMD ["python", "enhanced_monitoring.py"] 