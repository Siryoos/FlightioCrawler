[tool.poetry]
name = "flightio-crawler"
version = "1.0.0"
description = "Advanced flight price crawler with Persian language support"
authors = ["Your Name <your.email@example.com>"]
readme = "README.md"
# حذف یا تعلیق خط packages برای ساختار فعلی
# packages = [{include = "flightio_crawler", from = "src"}]

[tool.poetry.dependencies]
python = "^3.9"
fastapi = "^0.115.0"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
aiohttp = "^3.8.0"
psycopg2-binary = "^2.9.3"
redis = "^4.3.4"
python-dotenv = ">=1.0,<2.0"
pydantic = "^2.5.0"
sqlalchemy = "^2.0.0"
alembic = "1.12.1"
celery = "^5.3.0"
beautifulsoup4 = "^4.12.0"
python-multipart = "^0.0.6"
langdetect = "1.0.9"
joblib = "1.3.2"
playwright = "^1.49.0"
aiofiles = "^24.1.0"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
email-validator = "^2.1.0"
websockets = "^10.1"
aiohttp-socks = "^0.7.1"

# Persian Text Processing - Modern Alternatives
spacy = "^3.7.0"
persian-tools = "^0.0.8"
jdatetime = "^3.7.0"
parsivar = "^0.2.3"

# Monitoring and Logging
prometheus-client = "^0.14.1"
python-json-logger = "^2.0.2"

# Machine Learning
scikit-learn = "^1.0.2"
pandas = "^1.4.2"
numpy = "^1.22.3"

# Translation (replacing googletrans)
deep-translator = "^1.11.0"

# Web Crawling with modern NLTK (compatible with crawl4ai)
crawl4ai = "^0.6.3"
nltk = "^3.9.1"

[tool.poetry.group.dev.dependencies]
pytest = "^7.0.0"
pytest-asyncio = "^0.18.0"
pytest-cov = "^3.0.0"
pytest-mock = "^3.10.0"
black = "^22.1.0"
isort = "^5.10.1"
flake8 = "^4.0.1"
mypy = "^1.8.0"
pre-commit = "^3.0.0"
bandit = "^1.7.0"
safety = "^2.3.0"
types-redis = "^4.3.0"
types-requests = "^2.28.0"
types-beautifulsoup4 = "^4.11.0"
types-aiofiles = "^23.1.0"

[tool.poetry.group.optional.dependencies]
crawl4ai = "^0.6.3"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py39']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["adapters", "config", "data_manager", "monitoring", "utils"]
known_third_party = ["fastapi", "sqlalchemy", "redis", "aiohttp", "playwright", "beautifulsoup4"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true
show_column_numbers = true
pretty = true

# Module-specific configurations
[[tool.mypy.overrides]]
module = [
    "hazm",
    "persian_tools.*",
    "jdatetime",
    "parsivar",
    "crawl4ai.*",
    "nltk.*",
    "prometheus_client",
    "deep_translator.*",
    "langdetect",
    "joblib",
    "sklearn.*",
    "pandas.*",
    "numpy.*"
]
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
disallow_incomplete_defs = false

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    # تغییر مسیر coverage به root directory
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80"
]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
    "security: marks tests as security tests",
    "e2e: marks tests as end-to-end tests"
]

[tool.coverage.run]
# تغییر source به root directory
source = ["."]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/migrations/*",
    "venv/*",
    ".venv/*"
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.ruff]
target-version = "py39"
line-length = 88
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]
"tests/*" = ["F401", "F811"] 