version: '3.8'

services:
  # API Service for Local Development
  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: flightio-api-local
    command: python -m uvicorn main_v2:app --host 0.0.0.0 --port 8000 --reload --log-level debug
    environment:
      - DB_HOST=postgres
      - DB_NAME=flight_data_local
      - DB_USER=local_user
      - DB_PASSWORD=local_password
      - DB_PORT=5432
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - REDIS_DB=0
      - DATABASE_URL=postgresql://local_user:local_password@postgres:5432/flight_data_local
      - REDIS_URL=redis://redis:6379/0
      - LOG_LEVEL=DEBUG
      - DEBUG_MODE=true
      - ENVIRONMENT=local
      - ENABLE_CORS=true
      - RELOAD=true
      - PYTHONPATH=/app
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_started  # Relaxed for faster startup
      redis:
        condition: service_started
    volumes:
      - .:/app:rw
      - /app/__pycache__  # Exclude cache for performance
      - /app/.pytest_cache
    restart: "no"  # Don't restart automatically in local dev

  # Minimal PostgreSQL for Local Development
  postgres:
    image: postgres:15-alpine
    container_name: flightio-postgres-local
    environment:
      - POSTGRES_USER=local_user
      - POSTGRES_PASSWORD=local_password
      - POSTGRES_DB=flight_data_local
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    ports:
      - "5432:5432"
    volumes:
      - postgres_local_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    # Optimized for development speed
    command: postgres -c fsync=off -c synchronous_commit=off -c checkpoint_completion_target=0.9 -c wal_buffers=16MB
    restart: "no"

  # Minimal Redis for Local Development
  redis:
    image: redis:7.2-alpine
    container_name: flightio-redis-local
    ports:
      - "6379:6379"
    command: redis-server --save "" --appendonly no --maxmemory 32mb --maxmemory-policy allkeys-lru
    restart: "no"

  # Frontend Service (Optional for local development)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: flightio-frontend-local
    command: npm run dev
    environment:
      - NEXT_PUBLIC_API_BASE=http://localhost:8000
      - NODE_ENV=development
      - FAST_REFRESH=true
      - NEXT_TELEMETRY_DISABLED=1
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app:rw
      - /app/node_modules
      - /app/.next
    depends_on:
      - api
    restart: "no"
    profiles:
      - frontend

  # Development Tools Container (Optional)
  dev-tools:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: flightio-dev-tools-local
    command: tail -f /dev/null
    environment:
      - DATABASE_URL=postgresql://local_user:local_password@postgres:5432/flight_data_local
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    volumes:
      - .:/app:rw
    depends_on:
      - postgres
      - redis
    restart: "no"
    profiles:
      - tools

  # Jupyter Notebook for Data Analysis (Optional)
  jupyter:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: flightio-jupyter-local
    command: jupyter lab --ip=0.0.0.0 --port=8888 --no-browser --allow-root --NotebookApp.token='' --NotebookApp.password=''
    environment:
      - DATABASE_URL=postgresql://local_user:local_password@postgres:5432/flight_data_local
      - REDIS_URL=redis://redis:6379/0
      - PYTHONPATH=/app
    ports:
      - "8888:8888"
    volumes:
      - .:/app:rw
      - ./notebooks:/app/notebooks:rw
    depends_on:
      - postgres
      - redis
    restart: "no"
    profiles:
      - jupyter

# Local development network
networks:
  default:
    driver: bridge
    name: flightio-local

volumes:
  postgres_local_data:
    driver: local

# Development configuration templates
x-local-environment: &local-environment
  ENVIRONMENT: local
  DEBUG_MODE: "true"
  LOG_LEVEL: DEBUG
  ENABLE_CORS: "true"
  PYTHONPATH: /app

x-local-volumes: &local-volumes
  - .:/app:rw
  - /app/__pycache__
  - /app/.pytest_cache 